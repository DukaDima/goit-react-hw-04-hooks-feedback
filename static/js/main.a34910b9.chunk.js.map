{"version":3,"sources":["components/FeedbackWidget/FeedbackWidget.module.css","components/FeedbackWidget/FeedbackOption.jsx","components/FeedbackWidget/Statistics.jsx","components/FeedbackWidget/FeedbackTitle.jsx","components/FeedbackWidget/Notification.jsx","components/FeedbackWidget/FeedbackWidget.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","text","FeedbackTitle","title","children","Notification","message","notification","FeedbackWidget","state","props","defaultGood","defaultNeutral","defaultBad","goodIncrement","setState","prevState","neutralIncrement","badIncrement","this","Math","round","widget","FeedbackOption","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a34910b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"FeedbackWidget_statistics__1haNo\",\"text\":\"FeedbackWidget_text__2p9_p\",\"button\":\"FeedbackWidget_button__3L8e7\",\"title\":\"FeedbackWidget_title__3f35Z\",\"FeedbackTitle\":\"FeedbackWidget_FeedbackTitle__3e0QU\",\"message\":\"FeedbackWidget_message__3_PP9\",\"notification\":\"FeedbackWidget_notification__3H0nd\",\"widget\":\"FeedbackWidget_widget__2vTOU\"};","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\n    return (\n           <>\n             <button className={s.button} type=\"button\" onClick={onLeaveFeedback}>{options}</button>\n            </>\n    )\n}\nexport default FeedbackOptions\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.string.isRequired,\n    onLeaveFeedback:PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\n    return (\n           <div className={s.statistics}>\n                   \n                    <p className={s.text}>Good:{good}</p>\n                    <p className={s.text}>Neutral:{neutral}</p>\n                    <p className={s.text}>Bad:{bad}</p>\n                    <p className={s.text}>Total: {total}</p>\n                    <p className={s.text}>Positive feedback: {positivePercentage ? positivePercentage :0} %</p>\n               \n\n            </div>\n    )\n}\nexport default Statistics\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css';\nconst FeedbackTitle = ({ title, children }) => {\n  return (\n    <div className={s.FeedbackTitle}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default FeedbackTitle;\nFeedbackTitle.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\nconst Notification = ({message }) => {\n    return (\n        <div className={s.notification}><p className={s.message}>{message}</p></div>\n    )\n}\nexport default Notification\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n\n}","// import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport s from './FeedbackWidget.module.css';\nimport FeedbackOptions from './FeedbackOption';\nimport Statistics from './Statistics';\nimport FeedbackTitle from './FeedbackTitle';\nimport Notification from './Notification';\n\nclass FeedbackWidget extends Component {\n  static defaultProps = {\n    defaultGood: 0,\n    defaultNeutral: 0,\n    defaultBad: 0,\n  };\n  static propTypes = {};\n\n  state = {\n    good: this.props.defaultGood,\n    neutral: this.props.defaultNeutral,\n    bad: this.props.defaultBad,\n  };\n\n  goodIncrement = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n  neutralIncrement = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n  badIncrement = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  render() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    const positivePercentage = Math.round((this.state.good / total) * 100);\n\n    return (\n      <div className={s.widget}>\n        <h1>Feedback Widget </h1>\n\n        <FeedbackTitle title=\"Please leave  feedback\">\n          <FeedbackOptions\n            options={['good']}\n            onLeaveFeedback={this.goodIncrement}\n          />\n\n          <FeedbackOptions\n            options={'neutral'}\n            onLeaveFeedback={this.neutralIncrement}\n          />\n\n          <FeedbackOptions\n            options={'bad'}\n            onLeaveFeedback={this.badIncrement}\n          />\n        </FeedbackTitle>\n\n        <FeedbackTitle title=\"Statistics\">\n          {total !== 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message={'No feedback given'} />\n          )}\n        </FeedbackTitle>\n      </div>\n    );\n  }\n}\nexport default FeedbackWidget;\n","import React from 'react';\nimport './App.css';\nimport FeedbackWidget from './components/FeedbackWidget/FeedbackWidget';\n\n\nfunction App() {\n  return (\n    <>\n      <FeedbackWidget defaultGood={0} defaultNeutral={0} defaultBad={0}/>\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}