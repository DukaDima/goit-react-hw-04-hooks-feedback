{"version":3,"sources":["components/FeedbackWidget/FeedbackWidget.module.css","components/FeedbackWidget/FeedbackOption.jsx","components/FeedbackWidget/Statistics.jsx","components/FeedbackWidget/FeedbackTitle.jsx","components/FeedbackWidget/Notification.jsx","components/FeedbackWidget/FeedbackWidget.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","text","FeedbackTitle","title","children","Notification","message","notification","FeedbackWidget","useState","setGood","setNeutral","setBad","Math","round","widget","FeedbackOption","state","App","propTypes","PropTypes","number","func","isRequired","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a9d1670.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"FeedbackWidget_statistics__1haNo\",\"text\":\"FeedbackWidget_text__2p9_p\",\"button\":\"FeedbackWidget_button__3L8e7\",\"title\":\"FeedbackWidget_title__3f35Z\",\"FeedbackTitle\":\"FeedbackWidget_FeedbackTitle__3e0QU\",\"message\":\"FeedbackWidget_message__3_PP9\",\"notification\":\"FeedbackWidget_notification__3H0nd\",\"widget\":\"FeedbackWidget_widget__2vTOU\"};","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\n    return (\n           <>\n             <button className={s.button} type=\"button\" onClick={onLeaveFeedback}>{options}</button>\n            </>\n    )\n}\nexport default FeedbackOptions\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.string.isRequired,\n    onLeaveFeedback:PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\n    return (\n           <div className={s.statistics}>\n                   \n                    <p className={s.text}>Good:{good}</p>\n                    <p className={s.text}>Neutral:{neutral}</p>\n                    <p className={s.text}>Bad:{bad}</p>\n                    <p className={s.text}>Total: {total}</p>\n                    <p className={s.text}>Positive feedback: {positivePercentage ? positivePercentage :0} %</p>\n               \n\n            </div>\n    )\n}\nexport default Statistics\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css';\nconst FeedbackTitle = ({ title, children }) => {\n  return (\n    <div className={s.FeedbackTitle}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default FeedbackTitle;\nFeedbackTitle.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport s from './FeedbackWidget.module.css'\nconst Notification = ({message }) => {\n    return (\n        <div className={s.notification}><p className={s.message}>{message}</p></div>\n    )\n}\nexport default Notification\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n\n}","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './FeedbackWidget.module.css';\nimport FeedbackOptions from './FeedbackOption';\nimport Statistics from './Statistics';\nimport FeedbackTitle from './FeedbackTitle';\nimport Notification from './Notification';\n\nexport default function FeedbackWidget() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const goodIncrement = () => {\n    setGood(state => state + 1);\n  };\n  const neutralIncrement = () => {\n    setNeutral(state => state + 1);\n  };\n  const badIncrement = () => {\n    setBad(state => state + 1);\n  };\n\n  const total = good + neutral + bad;\n  const positivePercentage = Math.round((good / total) * 100);\n\n  return (\n    <div className={s.widget}>\n      <h1>Feedback Widget </h1>\n\n      <FeedbackTitle title=\"Please leave  feedback\">\n        <FeedbackOptions options={'good'} onLeaveFeedback={goodIncrement} />\n\n        <FeedbackOptions\n          options={'neutral'}\n          onLeaveFeedback={neutralIncrement}\n        />\n\n        <FeedbackOptions options={'bad'} onLeaveFeedback={badIncrement} />\n      </FeedbackTitle>\n\n      <FeedbackTitle title=\"Statistics\">\n        {total !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message={'No feedback given'} />\n        )}\n      </FeedbackTitle>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport FeedbackWidget from './components/FeedbackWidget/FeedbackWidget';\n\nexport default function App() {\n  return (\n    <>\n      <FeedbackWidget />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}